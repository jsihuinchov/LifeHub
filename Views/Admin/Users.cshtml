@model List<LifeHub.Models.ViewModels.AdminUserViewModel>
@{
    ViewData["Title"] = "Gestión de Usuarios";
}

<div class="admin-users">
    <!-- Header -->
    <div class="dashboard-header">
        <div class="header-content">
            <div class="header-text">
                <h1 class="dashboard-title">
                    <i class="fas fa-users me-3"></i>Gestión de Usuarios
                </h1>
                <p class="dashboard-subtitle">Administra y modera los usuarios de la plataforma</p>
            </div>
            <div class="header-stats">
                <div class="stat-badge">
                    <span class="stat-number">@Model.Count</span>
                    <span class="stat-label">Total Usuarios</span>
                </div>
            </div>
        </div>
    </div>

    <!-- Alertas -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert-card success">
            <div class="alert-content">
                <i class="fas fa-check-circle alert-icon"></i>
                <div class="alert-text">
                    <h4>¡Éxito!</h4>
                    <p>@TempData["SuccessMessage"]</p>
                </div>
            </div>
            <button class="alert-close" onclick="this.parentElement.style.display='none'">
                <i class="fas fa-times"></i>
            </button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert-card error">
            <div class="alert-content">
                <i class="fas fa-exclamation-circle alert-icon"></i>
                <div class="alert-text">
                    <h4>Error</h4>
                    <p>@TempData["ErrorMessage"]</p>
                </div>
            </div>
            <button class="alert-close" onclick="this.parentElement.style.display='none'">
                <i class="fas fa-times"></i>
            </button>
        </div>
    }

    <!-- Filtros y Búsqueda -->
    <div class="filters-card">
        <div class="filters-header">
            <h3 class="filters-title">
                <i class="fas fa-search me-2"></i>
                Buscar y Filtrar Usuarios
            </h3>
        </div>
        <div class="filters-body">
            <div class="search-filters-grid">
                <div class="search-group">
                    <div class="search-input-container">
                        <i class="fas fa-search search-icon"></i>
                        <input type="text" class="search-input" placeholder="Buscar por email o nombre..." id="searchInput">
                    </div>
                </div>
                <div class="filter-group">
                    <div class="filter-dropdown">
                        <button class="filter-dropdown-btn" type="button" data-bs-toggle="dropdown">
                            <i class="fas fa-filter me-2"></i>Filtrar por Estado
                        </button>
                        <ul class="filter-dropdown-menu">
                            <li><a class="filter-dropdown-item" href="#" data-filter="all">Todos los Usuarios</a></li>
                            <li><a class="filter-dropdown-item" href="#" data-filter="active">Usuarios Activos</a></li>
                            <li><a class="filter-dropdown-item" href="#" data-filter="banned">Usuarios Baneados</a></li>
                            <li><a class="filter-dropdown-item" href="#" data-filter="admin">Administradores</a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Tabla de Usuarios -->
    <div class="table-section">
        <div class="table-card">
            <div class="table-header">
                <h3 class="table-title">Lista de Usuarios Registrados</h3>
                <div class="table-actions">
                    <span class="table-count">Mostrando @Model.Count usuarios</span>
                </div>
            </div>
            <div class="table-container">
                <table class="data-table" id="usersTable">
                    <thead>
                        <tr>
                            <th>Usuario</th>
                            <th>Plan</th>
                            <th>Estado</th>
                            <th>Roles</th>
                            <th>Última Actividad</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model)
                        {
                            <tr class="user-row" data-status="@user.Status.ToLower()" data-role="@(user.IsAdmin ? "admin" : "user")">
                                <td>
                                    <div class="user-info">
                                        <div class="user-avatar @(user.IsAdmin ? "admin" : "")">
                                            <i class="fas fa-user"></i>
                                        </div>
                                        <div class="user-details">
                                            <div class="user-email">@user.Email</div>
                                            <div class="user-name">@user.UserName</div>
                                            @if (user.Id == "admin-id-123")
                                            {
                                                <div class="user-badge primary">Principal</div>
                                            }
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="plan-info">
                                        <div class="plan-name">@user.SubscriptionPlan</div>
                                        @if (user.SubscriptionEndDate.HasValue)
                                        {
                                            <div class="plan-expiry">
                                                <span class="expiry-label">Vence:</span>
                                                <span class="expiry-date">@user.SubscriptionEndDate.Value.ToString("dd/MM/yyyy")</span>
                                            </div>
                                            <div class="expiry-progress">
                                                <div class="progress-bar">
                                                    @{
                                                        var daysLeft = user.DaysUntilSubscriptionEnd;
                                                        var progressClass = daysLeft > 7 ? "success" : daysLeft > 3 ? "warning" : "danger";
                                                        var progressWidth = daysLeft > 30 ? 100 : (daysLeft * 100 / 30);
                                                    }
                                                    <div class="progress-fill @progressClass" style="width: @progressWidth%"></div>
                                                </div>
                                                <div class="days-left">@daysLeft días</div>
                                            </div>
                                        }
                                    </div>
                                </td>
                                <td>
                                    <div class="status-container">
                                        <span class="status-badge @user.Status.ToLower()">@user.Status</span>
                                        @if (!user.EmailConfirmed)
                                        {
                                            <div class="status-warning">
                                                <i class="fas fa-exclamation-triangle"></i>
                                                <span>Email no confirmado</span>
                                            </div>
                                        }
                                    </div>
                                </td>
                                <td>
                                    <div class="roles-container">
                                        @foreach (var role in user.Roles)
                                        {
                                            <span class="role-badge @(role.ToLower())">@role</span>
                                        }
                                    </div>
                                </td>
                                <td>
                                    <div class="activity-info">
                                        <div class="last-login">@(user.LastLogin?.ToString("dd/MM/yyyy HH:mm") ?? "Nunca")</div>
                                    </div>
                                </td>
                                <td>
                                    <div class="actions-container">
                                        <a href="@Url.Action("UserDetails", new { id = user.Id })" class="action-btn view" title="Ver detalles">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        
                                        @if (user.IsBanned)
                                        {
                                            <form method="post" action="@Url.Action("UnbanUser")" class="action-form">
                                                @Html.AntiForgeryToken()
                                                <input type="hidden" name="userId" value="@user.Id" />
                                                <button type="submit" class="action-btn success" title="Desbanear usuario">
                                                    <i class="fas fa-user-check"></i>
                                                </button>
                                            </form>
                                        }
                                        else
                                        {
                                            <button type="button" class="action-btn warning ban-user" 
                                                    data-user-id="@user.Id" 
                                                    data-user-email="@user.Email"
                                                    title="Banear usuario">
                                                <i class="fas fa-user-slash"></i>
                                            </button>
                                        }

                                        @if (!user.IsAdmin && user.Id != "admin-id-123")
                                        {
                                            <form method="post" action="@Url.Action("ToggleAdminRole")" class="action-form">
                                                @Html.AntiForgeryToken()
                                                <input type="hidden" name="userId" value="@user.Id" />
                                                <button type="submit" class="action-btn info" title="Hacer administrador">
                                                    <i class="fas fa-shield-alt"></i>
                                                </button>
                                            </form>
                                        }

                                        @if (user.Id != "admin-id-123")
                                        {
                                            <button type="button" class="action-btn danger delete-user" 
                                                    data-user-id="@user.Id" 
                                                    data-user-email="@user.Email"
                                                    title="Eliminar usuario">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Modal para Banear Usuario -->
<div class="modal" id="banModal">
    <div class="modal-overlay"></div>
    <div class="modal-content">
        <div class="modal-header">
            <h3 class="modal-title">Banear Usuario</h3>
            <button type="button" class="modal-close" data-bs-dismiss="modal">
                <i class="fas fa-times"></i>
            </button>
        </div>
        <form method="post" action="@Url.Action("BanUser")">
            @Html.AntiForgeryToken()
            <input type="hidden" name="userId" id="banUserId" />
            <div class="modal-body">
                <div class="modal-user-info">
                    <div class="user-avatar large">
                        <i class="fas fa-user"></i>
                    </div>
                    <div class="user-details">
                        <div class="user-email" id="banUserEmail"></div>
                        <div class="user-status warning">Será baneado</div>
                    </div>
                </div>
                <div class="form-group">
                    <label for="banReason" class="form-label">Razón del baneo:</label>
                    <textarea class="form-control" id="banReason" name="reason" rows="3" placeholder="Describe la razón del baneo..." required></textarea>
                </div>
                <div class="form-options">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="permanentBan" name="permanent" checked>
                        <label class="form-check-label" for="permanentBan">
                            Baneo permanente
                        </label>
                    </div>
                    <div class="temporary-options" id="temporaryBanOptions" style="display: none;">
                        <label for="banDays" class="form-label">Duración del baneo:</label>
                        <input type="number" class="form-control" id="banDays" name="days" min="1" max="365" value="30">
                        <span class="form-help">días</span>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="submit" class="btn btn-danger">Banear Usuario</button>
            </div>
        </form>
    </div>
</div>

<!-- Modal para Eliminar Usuario -->
<div class="modal" id="deleteModal">
    <div class="modal-overlay"></div>
    <div class="modal-content">
        <div class="modal-header">
            <h3 class="modal-title text-danger">Eliminar Usuario</h3>
            <button type="button" class="modal-close" data-bs-dismiss="modal">
                <i class="fas fa-times"></i>
            </button>
        </div>
        <form method="post" action="@Url.Action("DeleteUser")">
            @Html.AntiForgeryToken()
            <input type="hidden" name="userId" id="deleteUserId" />
            <div class="modal-body">
                <div class="warning-banner">
                    <i class="fas fa-exclamation-triangle"></i>
                    <div class="warning-content">
                        <h4>¡Advertencia!</h4>
                        <p>Esta acción no se puede deshacer.</p>
                    </div>
                </div>
                <div class="modal-user-info">
                    <div class="user-avatar large danger">
                        <i class="fas fa-user"></i>
                    </div>
                    <div class="user-details">
                        <div class="user-email" id="deleteUserEmail"></div>
                        <div class="user-status danger">Será eliminado permanentemente</div>
                    </div>
                </div>
                <div class="deletion-warning">
                    <p><strong>Se eliminarán todos los datos asociados al usuario:</strong></p>
                    <ul>
                        <li><i class="fas fa-tasks"></i> Hábitos y progreso</li>
                        <li><i class="fas fa-exchange-alt"></i> Transacciones financieras</li>
                        <li><i class="fas fa-calendar"></i> Citas médicas</li>
                        <li><i class="fas fa-users"></i> Participación en comunidades</li>
                    </ul>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="submit" class="btn btn-danger">Eliminar Permanentemente</button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        // Búsqueda en tiempo real
        document.getElementById('searchInput').addEventListener('input', filterUsers);

        function filterUsers() {
            const searchText = document.getElementById('searchInput').value.toLowerCase();
            const rows = document.querySelectorAll('.user-row');
            
            rows.forEach(row => {
                const email = row.querySelector('.user-email').textContent.toLowerCase();
                const username = row.querySelector('.user-name').textContent.toLowerCase();
                const matchesSearch = email.includes(searchText) || username.includes(searchText);
                
                row.style.display = matchesSearch ? '' : 'none';
            });
        }

        // Filtros por estado/rol
        document.querySelectorAll('.filter-dropdown-item').forEach(option => {
            option.addEventListener('click', function(e) {
                e.preventDefault();
                const filter = this.getAttribute('data-filter');
                const rows = document.querySelectorAll('.user-row');
                
                rows.forEach(row => {
                    if (filter === 'all') {
                        row.style.display = '';
                    } else if (filter === 'active') {
                        row.style.display = row.getAttribute('data-status') === 'activo' ? '' : 'none';
                    } else if (filter === 'banned') {
                        row.style.display = row.getAttribute('data-status') === 'baneado' ? '' : 'none';
                    } else if (filter === 'admin') {
                        row.style.display = row.getAttribute('data-role') === 'admin' ? '' : 'none';
                    }
                });

                // Actualizar texto del botón dropdown
                document.querySelector('.filter-dropdown-btn').innerHTML = 
                    '<i class="fas fa-filter me-2"></i>' + this.textContent;
            });
        });

        // Modal de Baneo
        document.querySelectorAll('.ban-user').forEach(btn => {
            btn.addEventListener('click', function() {
                const userId = this.getAttribute('data-user-id');
                const userEmail = this.getAttribute('data-user-email');
                
                document.getElementById('banUserId').value = userId;
                document.getElementById('banUserEmail').textContent = userEmail;
                
                document.getElementById('banModal').style.display = 'block';
            });
        });

        // Toggle baneo temporal/permanente
        document.getElementById('permanentBan').addEventListener('change', function() {
            document.getElementById('temporaryBanOptions').style.display = 
                this.checked ? 'none' : 'block';
        });

        // Modal de Eliminación
        document.querySelectorAll('.delete-user').forEach(btn => {
            btn.addEventListener('click', function() {
                const userId = this.getAttribute('data-user-id');
                const userEmail = this.getAttribute('data-user-email');
                
                document.getElementById('deleteUserId').value = userId;
                document.getElementById('deleteUserEmail').textContent = userEmail;
                
                document.getElementById('deleteModal').style.display = 'block';
            });
        });

        // Cerrar modales
        document.querySelectorAll('.modal-close, .modal-overlay').forEach(closeBtn => {
            closeBtn.addEventListener('click', function() {
                document.querySelectorAll('.modal').forEach(modal => {
                    modal.style.display = 'none';
                });
            });
        });

        // Prevenir cierre del modal al hacer click dentro del contenido
        document.querySelectorAll('.modal-content').forEach(content => {
            content.addEventListener('click', function(e) {
                e.stopPropagation();
            });
        });
    </script>
}

<style>
    /* ===== GESTIÓN DE USUARIOS - ESTILOS MEJORADOS ===== */
    .admin-users {
        padding: 2rem;
        background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
        min-height: 100vh;
    }

    /* Header */
    .dashboard-header {
        background: linear-gradient(120deg, var(--primary) 0%, var(--secondary) 100%);
        color: white;
        border-radius: 20px;
        padding: 2.5rem;
        margin-bottom: 2rem;
        box-shadow: 0 10px 30px rgba(67, 97, 238, 0.2);
        position: relative;
        overflow: hidden;
    }

    .dashboard-header::before {
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        width: 200px;
        height: 200px;
        background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1440 320'%3E%3Cpath fill='%23ffffff' fill-opacity='0.1' d='M0,128L48,117.3C96,107,192,85,288,112C384,139,480,213,576,218.7C672,224,768,160,864,138.7C960,117,1056,139,1152,149.3C1248,160,1344,160,1392,160L1440,160L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z'%3E%3C/path%3E%3C/svg%3E");
        background-size: cover;
        opacity: 0.1;
    }

    .header-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
        position: relative;
        z-index: 2;
    }

    .dashboard-title {
        font-size: 2.5rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
        color: white;
    }

    .dashboard-subtitle {
        font-size: 1.1rem;
        opacity: 0.9;
        margin: 0;
    }

    .header-stats {
        display: flex;
        align-items: center;
    }

    .stat-badge {
        background: rgba(255, 255, 255, 0.15);
        backdrop-filter: blur(10px);
        padding: 1.5rem 2rem;
        border-radius: 16px;
        border: 1px solid rgba(255, 255, 255, 0.2);
        text-align: center;
        transition: all 0.3s ease;
    }

    .stat-badge:hover {
        background: rgba(255, 255, 255, 0.2);
        transform: translateY(-2px);
    }

    .stat-number {
        display: block;
        font-size: 2.5rem;
        font-weight: 800;
        color: white;
        line-height: 1;
    }

    .stat-label {
        display: block;
        font-size: 0.9rem;
        color: rgba(255, 255, 255, 0.9);
        margin-top: 0.5rem;
        font-weight: 500;
    }

    /* Alertas */
    .alert-card {
        border-radius: 12px;
        padding: 1.5rem;
        margin-bottom: 2rem;
        display: flex;
        align-items: center;
        justify-content: space-between;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
        border-left: 4px solid;
    }

    .alert-card.success {
        background: rgba(16, 185, 129, 0.1);
        border-left-color: #10b981;
        color: #065f46;
    }

    .alert-card.error {
        background: rgba(239, 68, 68, 0.1);
        border-left-color: #ef4444;
        color: #7f1d1d;
    }

    .alert-content {
        display: flex;
        align-items: center;
        gap: 1rem;
        flex: 1;
    }

    .alert-icon {
        font-size: 1.5rem;
    }

    .alert-text h4 {
        margin: 0 0 0.25rem 0;
        font-weight: 600;
    }

    .alert-text p {
        margin: 0;
        opacity: 0.9;
    }

    .alert-close {
        background: none;
        border: none;
        font-size: 1.2rem;
        cursor: pointer;
        padding: 0.5rem;
        border-radius: 6px;
        transition: all 0.3s ease;
        opacity: 0.7;
    }

    .alert-close:hover {
        opacity: 1;
        background: rgba(0, 0, 0, 0.1);
    }

    /* Filtros */
    .filters-card {
        background: white;
        border-radius: 16px;
        padding: 2rem;
        margin-bottom: 2rem;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.08);
        border: 1px solid #f1f5f9;
    }

    .filters-header {
        margin-bottom: 1.5rem;
    }

    .filters-title {
        font-size: 1.3rem;
        font-weight: 600;
        color: #1e293b;
        margin: 0;
        display: flex;
        align-items: center;
    }

    .search-filters-grid {
        display: grid;
        grid-template-columns: 1fr auto;
        gap: 1.5rem;
        align-items: end;
    }

    .search-input-container {
        position: relative;
    }

    .search-icon {
        position: absolute;
        left: 1rem;
        top: 50%;
        transform: translateY(-50%);
        color: #64748b;
        z-index: 2;
    }

    .search-input {
        width: 100%;
        padding: 0.875rem 1rem 0.875rem 3rem;
        border: 2px solid #e2e8f0;
        border-radius: 12px;
        font-size: 1rem;
        transition: all 0.3s ease;
        background: white;
        font-family: inherit;
    }

    .search-input:focus {
        outline: none;
        border-color: var(--primary);
        box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.1);
    }

    .filter-dropdown {
        position: relative;
    }

    .filter-dropdown-btn {
        display: flex;
        align-items: center;
        padding: 0.875rem 1.5rem;
        background: white;
        border: 2px solid #e2e8f0;
        border-radius: 12px;
        color: #475569;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        white-space: nowrap;
        font-family: inherit;
    }

    .filter-dropdown-btn:hover {
        border-color: var(--primary);
        color: var(--primary);
    }

    .filter-dropdown-menu {
        position: absolute;
        top: 100%;
        right: 0;
        background: white;
        border: 1px solid #e2e8f0;
        border-radius: 12px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        padding: 0.5rem;
        min-width: 200px;
        z-index: 1000;
        display: none;
    }

    .filter-dropdown-menu.show {
        display: block;
    }

    .filter-dropdown-item {
        display: block;
        padding: 0.75rem 1rem;
        color: #374151;
        text-decoration: none;
        border-radius: 8px;
        transition: all 0.3s ease;
        font-weight: 500;
    }

    .filter-dropdown-item:hover {
        background: #f8fafc;
        color: var(--primary);
    }

    /* Tabla */
    .table-section {
        margin-bottom: 2rem;
    }

    .table-card {
        background: white;
        border-radius: 16px;
        overflow: hidden;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.08);
        border: 1px solid #f1f5f9;
    }

    .table-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1.5rem 2rem;
        border-bottom: 1px solid #f1f5f9;
        background: #f8fafc;
    }

    .table-title {
        font-size: 1.3rem;
        font-weight: 600;
        color: #1e293b;
        margin: 0;
    }

    .table-count {
        color: #64748b;
        font-weight: 500;
    }

    .table-container {
        overflow-x: auto;
    }

    .data-table {
        width: 100%;
        border-collapse: collapse;
    }

    .data-table th {
        background: #f8fafc;
        padding: 1rem 1.5rem;
        text-align: left;
        font-weight: 600;
        color: #374151;
        border-bottom: 1px solid #e2e8f0;
        font-size: 0.9rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .data-table td {
        padding: 1.5rem;
        border-bottom: 1px solid #f1f5f9;
        vertical-align: top;
    }

    .data-table tr:last-child td {
        border-bottom: none;
    }

    .data-table tr:hover {
        background: #f8fafc;
    }

    /* Información de Usuario */
    .user-info {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .user-avatar {
        width: 50px;
        height: 50px;
        background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 1.2rem;
        flex-shrink: 0;
        box-shadow: 0 4px 10px rgba(67, 97, 238, 0.3);
    }

    .user-avatar.admin {
        background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
    }

    .user-avatar.large {
        width: 70px;
        height: 70px;
        font-size: 1.5rem;
    }

    .user-avatar.large.danger {
        background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
    }

    .user-details {
        flex: 1;
    }

    .user-email {
        font-weight: 600;
        color: #1e293b;
        margin-bottom: 0.25rem;
    }

    .user-name {
        color: #64748b;
        font-size: 0.9rem;
    }

    .user-badge {
        display: inline-block;
        padding: 0.25rem 0.75rem;
        background: rgba(67, 97, 238, 0.1);
        color: var(--primary);
        border-radius: 20px;
        font-size: 0.75rem;
        font-weight: 600;
        margin-top: 0.5rem;
    }

    /* Información del Plan */
    .plan-info {
        min-width: 150px;
    }

    .plan-name {
        font-weight: 600;
        color: #1e293b;
        margin-bottom: 0.5rem;
    }

    .plan-expiry {
        display: flex;
        gap: 0.5rem;
        margin-bottom: 0.5rem;
        font-size: 0.85rem;
    }

    .expiry-label {
        color: #64748b;
    }

    .expiry-date {
        color: #374151;
        font-weight: 500;
    }

    .expiry-progress {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .progress-bar {
        flex: 1;
        height: 6px;
        background: #e2e8f0;
        border-radius: 3px;
        overflow: hidden;
    }

    .progress-fill {
        height: 100%;
        border-radius: 3px;
        transition: width 0.3s ease;
    }

    .progress-fill.success { background: #10b981; }
    .progress-fill.warning { background: #f59e0b; }
    .progress-fill.danger { background: #ef4444; }

    .days-left {
        font-size: 0.8rem;
        color: #64748b;
        font-weight: 500;
        min-width: 50px;
    }

    /* Estados y Roles */
    .status-container {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }

    .status-badge {
        display: inline-block;
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 600;
        text-align: center;
        min-width: 80px;
    }

    .status-badge.activo {
        background: rgba(16, 185, 129, 0.1);
        color: #10b981;
        border: 1px solid rgba(16, 185, 129, 0.2);
    }

    .status-badge.baneado {
        background: rgba(239, 68, 68, 0.1);
        color: #ef4444;
        border: 1px solid rgba(239, 68, 68, 0.2);
    }

    .status-warning {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.8rem;
        color: #f59e0b;
        padding: 0.4rem 0.8rem;
        background: rgba(245, 158, 11, 0.1);
        border-radius: 8px;
        border: 1px solid rgba(245, 158, 11, 0.2);
    }

    .roles-container {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }

    .role-badge {
        display: inline-block;
        padding: 0.4rem 0.8rem;
        border-radius: 12px;
        font-size: 0.75rem;
        font-weight: 600;
        text-align: center;
        border: 1px solid;
    }

    .role-badge.admin {
        background: rgba(239, 68, 68, 0.1);
        color: #ef4444;
        border-color: rgba(239, 68, 68, 0.2);
    }

    .role-badge.user {
        background: rgba(100, 116, 139, 0.1);
        color: #64748b;
        border-color: rgba(100, 116, 139, 0.2);
    }

    /* Actividad */
    .activity-info {
        text-align: left;
    }

    .last-login {
        color: #64748b;
        font-size: 0.9rem;
        font-weight: 500;
    }

    /* Acciones */
    .actions-container {
        display: flex;
        gap: 0.5rem;
        justify-content: flex-start;
        flex-wrap: wrap;
    }

    .action-btn {
        width: 40px;
        height: 40px;
        border: none;
        border-radius: 10px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        font-size: 1rem;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
    }

    .action-btn.view { background: #3b82f6; }
    .action-btn.success { background: #10b981; }
    .action-btn.warning { background: #f59e0b; }
    .action-btn.info { background: #8b5cf6; }
    .action-btn.danger { background: #ef4444; }

    .action-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    }

    .action-form {
        display: inline;
    }

    /* Modales */
    .modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 9999;
    }

    .modal-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        backdrop-filter: blur(5px);
    }

    .modal-content {
        position: relative;
        background: white;
        margin: 2rem auto;
        border-radius: 20px;
        box-shadow: 0 25px 50px rgba(0, 0, 0, 0.2);
        max-width: 500px;
        width: 90%;
        max-height: 90vh;
        overflow-y: auto;
        z-index: 10000;
    }

    .modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1.5rem 2rem;
        border-bottom: 1px solid #f1f5f9;
    }

    .modal-title {
        font-size: 1.5rem;
        font-weight: 600;
        color: #1e293b;
        margin: 0;
    }

    .modal-close {
        background: none;
        border: none;
        font-size: 1.2rem;
        color: #64748b;
        cursor: pointer;
        padding: 0.5rem;
        border-radius: 6px;
        transition: all 0.3s ease;
    }

    .modal-close:hover {
        background: #f1f5f9;
        color: #374151;
    }

    .modal-body {
        padding: 2rem;
    }

    .modal-user-info {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 1.5rem;
        padding: 1.5rem;
        background: #f8fafc;
        border-radius: 12px;
        border: 1px solid #e2e8f0;
    }

    .user-status {
        font-size: 0.9rem;
        font-weight: 600;
        padding: 0.4rem 0.8rem;
        border-radius: 12px;
        display: inline-block;
    }

    .user-status.warning {
        background: rgba(245, 158, 11, 0.1);
        color: #f59e0b;
        border: 1px solid rgba(245, 158, 11, 0.2);
    }

    .user-status.danger {
        background: rgba(239, 68, 68, 0.1);
        color: #ef4444;
        border: 1px solid rgba(239, 68, 68, 0.2);
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .form-label {
        display: block;
        font-weight: 600;
        color: #374151;
        margin-bottom: 0.5rem;
    }

    .form-control {
        width: 100%;
        padding: 0.875rem 1rem;
        border: 2px solid #e2e8f0;
        border-radius: 8px;
        font-size: 1rem;
        transition: all 0.3s ease;
        font-family: inherit;
    }

    .form-control:focus {
        outline: none;
        border-color: var(--primary);
        box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.1);
    }

    .form-options {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .form-check {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .form-check-input {
        width: 18px;
        height: 18px;
        border: 2px solid #d1d5db;
        border-radius: 4px;
        cursor: pointer;
    }

    .form-check-input:checked {
        background-color: var(--primary);
        border-color: var(--primary);
    }

    .form-check-label {
        color: #374151;
        font-weight: 500;
        cursor: pointer;
    }

    .temporary-options {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .form-help {
        color: #64748b;
        font-size: 0.9rem;
    }

    .warning-banner {
        display: flex;
        align-items: center;
        gap: 1rem;
        padding: 1.5rem;
        background: rgba(245, 158, 11, 0.1);
        border: 1px solid rgba(245, 158, 11, 0.3);
        border-radius: 12px;
        margin-bottom: 1.5rem;
    }

    .warning-banner i {
        font-size: 1.5rem;
        color: #f59e0b;
    }

    .warning-content h4 {
        margin: 0 0 0.25rem 0;
        color: #92400e;
        font-weight: 600;
    }

    .warning-content p {
        margin: 0;
        color: #92400e;
        opacity: 0.8;
    }

    .deletion-warning {
        background: #fef2f2;
        border: 1px solid #fecaca;
        border-radius: 12px;
        padding: 1.5rem;
    }

    .deletion-warning p {
        margin: 0 0 1rem 0;
        color: #7f1d1d;
        font-weight: 600;
    }

    .deletion-warning ul {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .deletion-warning li {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        padding: 0.5rem 0;
        color: #7f1d1d;
    }

    .deletion-warning li i {
        color: #ef4444;
        width: 16px;
    }

    .modal-footer {
        display: flex;
        gap: 1rem;
        justify-content: flex-end;
        padding: 1.5rem 2rem;
        border-top: 1px solid #f1f5f9;
        background: #f8fafc;
        border-radius: 0 0 20px 20px;
    }

    .btn {
        padding: 0.875rem 1.5rem;
        border: none;
        border-radius: 10px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        font-family: inherit;
        font-size: 1rem;
    }

    .btn-secondary {
        background: #64748b;
        color: white;
    }

    .btn-secondary:hover {
        background: #475569;
        transform: translateY(-1px);
    }

    .btn-danger {
        background: #ef4444;
        color: white;
    }

    .btn-danger:hover {
        background: #dc2626;
        transform: translateY(-1px);
    }

    /* Responsive */
    @@media (max-width: 768px) {
        .admin-users {
            padding: 1rem;
        }

        .dashboard-header {
            padding: 2rem 1.5rem;
            border-radius: 16px;
        }

        .header-content {
            flex-direction: column;
            gap: 1.5rem;
            text-align: center;
        }

        .dashboard-title {
            font-size: 2rem;
        }

        .search-filters-grid {
            grid-template-columns: 1fr;
            gap: 1rem;
        }

        .table-header {
            flex-direction: column;
            gap: 1rem;
            align-items: flex-start;
            padding: 1.5rem;
        }

        .data-table th,
        .data-table td {
            padding: 1rem;
        }

        .user-info {
            flex-direction: column;
            text-align: center;
            gap: 0.75rem;
        }

        .actions-container {
            justify-content: center;
        }

        .modal-content {
            margin: 1rem;
            width: calc(100% - 2rem);
            border-radius: 16px;
        }

        .modal-body {
            padding: 1.5rem;
        }

        .modal-footer {
            flex-direction: column;
        }

        .btn {
            width: 100%;
        }
    }

    @@media (max-width: 480px) {
        .dashboard-title {
            font-size: 1.8rem;
        }

        .stat-number {
            font-size: 2rem;
        }

        .user-avatar {
            width: 45px;
            height: 45px;
            font-size: 1.1rem;
        }

        .action-btn {
            width: 36px;
            height: 36px;
            font-size: 0.9rem;
        }

        .status-badge,
        .role-badge {
            font-size: 0.75rem;
            padding: 0.4rem 0.8rem;
        }
    }
</style>